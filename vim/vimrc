set modelines=0		" CVE-2007-2438

set nocompatible	" Use Vim defaults instead of 100% vi compatibility

" =============== Pathogen Initialisation ==============

call pathogen#runtime_append_all_bundles()
call pathogen#infect()
call pathogen#helptags()

" ======================= General Info ===================

syntax on
"if has("gui_running")
"    set guifont=Consolas:h13
"    set fuoptions=maxvert,maxhorz
"    colorscheme wombat
"endif

set textwidth=100
set t_Co=256
colorscheme 256-grayvim

filetype plugin indent on
set encoding=utf-8

set ai                  "Auto indent
set si                  "Smart indent
set smarttab
set wrap
set autoindent
set expandtab

set shiftwidth=4        " Set indent to 4 spaces
"set foldenable         " Auto fold code
set ruler
set nu
set title
set backspace=2		   " more powerful backspacing
set autoread           "Reload files changed outside vim

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:Â·


" =================== Search =====================

set ignorecase          " Do case insensitive matching
set smartcase           " Do smart case matching
set hlsearch
set incsearch           " Incremental search


" ======================= Command and Status bar =========================

set cmdheight=2
set laststatus=2
"set statusline=[%l,%v\ %P%M][CWD:\ %{CWD()}][FILE:\ %f]\ %r%h%w\ (%{&ff})
set showcmd
set showmode
hi StatusLine ctermfg=DarkGray ctermbg=White
au InsertEnter * hi StatusLine ctermfg=White ctermbg=DarkBlue
au InsertLeave * hi StatusLine ctermfg=DarkGray ctermbg=White

" ======================= Backup Rules =========================

set noswapfile
set nobackup
set nowb

" Don't write backup file if vim is being called by "crontab -e"
au BufWrite /private/tmp/crontab.* set nowritebackup

" Don't write backup file if vim is being called by "chpass"
au BufWrite /private/etc/pw.* set nowritebackup

" ==================== Python-Mode plugin ======================

" Enable all python highlightings
let g:pymode_syntax_all = 1

" Enable python folding
let g:pymode_folding = 1

" Enable pymode indentation
let g:pymode_indent = 1

" Enable pymode's custom syntax highlighting
let g:pymode_syntax = 1

" Highlight "print" as function
let g:pymode_syntax_print_as_function = 0

" Highlight string formatting
let g:pymode_syntax_string_formatting = g:pymode_syntax_all

" Highlight str.format syntax
let g:pymode_syntax_string_format = g:pymode_syntax_all

" Highlight builtin objects (__doc__, self, etc)
let g:pymode_syntax_builtin_objs = g:pymode_syntax_all

" Highlight builtin functions
let g:pymode_syntax_builtin_funcs = g:pymode_syntax_all

" Highlight exceptions
let g:pymode_syntax_highlight_exceptions = g:pymode_syntax_all

